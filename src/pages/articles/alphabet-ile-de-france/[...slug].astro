---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getImage } from "astro:assets";
import Main from "../../../layouts/article.astro";
import MapboxMap from "../../../components/mapbox-map.astro";

export async function getStaticPaths() {
  return (await getCollection("alphabet-ile-de-france")).map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"alphabet-ile-de-france">;
}

const { entry } = Astro.props;

let ogImage: string | undefined;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/content/images/*.{jpeg,jpg}",
);
if (images[entry.data.image]) {
  const { default: image } = await images[entry.data.image]();
  const { src } = await getImage({
    src: image,
    format: "jpeg",
  });
  ogImage = "https://abisummers.com" + src;
}

const siblings = await getCollection("alphabet-ile-de-france");
const index = siblings.findIndex((sibling) => sibling.slug === entry.slug);
const prev = siblings[index - 1];
const next = siblings[index + 1];

const { Content } = await entry.render();
---

<Main
  showLanguageSwitcher={false}
  title={entry.data.title}
  description={`A project to discover a different place in Île-de-France, one letter at a time. In this article, we visit ${entry.data.title}.`}
  ogImage={ogImage}
>
  <h2>{entry.data.title}</h2>
  <a href="/articles/alphabet-ile-de-france/">← back to all articles</a>
  <p>
    date visited:
    <time datetime={entry.data.date.toISOString()}>
      {
        entry.data.date.toLocaleDateString("en-uk", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </time>
  </p>
  <style is:global>
    img {
      max-width: 100%;
      height: auto;
    }
  </style>
  <Content />
  <h3>Location</h3>
  <MapboxMap
    latitude={48.7}
    longitude={2.51}
    zoom={7.74}
    mapstyle="mapbox://styles/haroenv/clvi5zbe601bg01qu2iez1exk"
    accesstoken="pk.eyJ1IjoiaGFyb2VudiIsImEiOiJjbHZpOGZsOHQwM3oyMmlscTJweTRleHo3In0.mU1wMXCVpQvbhkXcZvFawg"
    interactive="interactive"
    points={[
      {
        latitude: entry.data.coordinates.lat,
        longitude: entry.data.coordinates.lng,
        title: entry.data.title,
        link: `/articles/alphabet-ile-de-france/${entry.slug}/`,
        letter: entry.data.letter,
      },
    ]}
  />
  <style>
    footer p {
      font-style: italic;
    }
    footer .links {
      display: flex;
      justify-content: space-between;
      gap: 0.5em;
    }

    footer .links a {
      padding: 2em;
      border: 0.1em solid currentColor;
      text-decoration: none;
      text-align: center;
      display: flex;
      flex-direction: column;
      gap: 1em;
    }

    footer .links a:hover {
      background-color: var(--contrast);
    }
    footer .links a .title {
      text-decoration: underline;
    }
  </style>
  <footer>
    <p>
      This article is part of the <a href="/articles/alphabet-ile-de-france/"
        >Alphabet of Île-de-France</a
      > series. Check out the other places as well!
    </p>
    <div class="links">
      {
        prev ? (
          <a href={`/articles/alphabet-ile-de-france/${prev.slug}/`}>
            <div>Read the previous article:</div>
            <div class="title">{prev.data.title}</div>
          </a>
        ) : (
          <a href={"/articles/alphabet-ile-de-france/"}>
            <div>Read all:</div>
            <div class="title">Alphabet of Île-de-France</div>
          </a>
        )
      }
      {
        next ? (
          <a href={`/articles/alphabet-ile-de-france/${next.slug}/`}>
            <div>Read the next article:</div>
            <div class="title">{next.data.title}</div>
          </a>
        ) : (
          <a href={"/articles/alphabet-ile-de-france/"}>
            <div>Read all:</div>
            <div class="title">Alphabet of Île-de-France</div>
          </a>
        )
      }
    </div>
  </footer>
</Main>
